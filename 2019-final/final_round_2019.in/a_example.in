6 3 2
c0 15 5
0
c1 10 18
0
c2 15 35
1 c0
c3 13 52
1 c1
c4 20 52
2 c1 c2
c5 15 21
2 c2 c3
c3 40 8
c4 45 15
c5 53 35


  if(node not in self.aT):
            aT = 0
            # If node is a leaf we place it where the waiting time is the min
            place = self.getFasterServerIndex()
            for children in node:
                if(self.aT[children] > aT):
                    place = self.getNodeServerPosition(children)
                    aT = self.aT[children]
            #self.servers[place].append(children)
            self.aT[children] = children.packs("cT") +  children.packs("rT") + self.times[place]
            self.times[place]+=children.packs("cT")
            self.pos[children] = place

        elif (self.aT[node]>self.getFasterServerIndex()-1.5*node.packs["cT"]):
            place = self.getFasterServerIndex()
            #self.servers[place].append(node)
            time = children.packs("cT") +  children.packs("rT") + self.times[place]
            if(time < self.aT[children]):
                self.aT[children] = time
                self.pos[children] = place